package methodsAndMoreMethods;

public class methods {
	

	

	public static void displayHighScorePosition(String playerName, int scoreTablePosition){
		System.out.println("The player" + playerName + "has managed to score the position"
		+ scoreTablePosition);
	}
	
	public static int calculateHighScore(int score){
		if(score >= 1000){
			scoreTablePosition = 1;
		} else if (score > 500 && score < 1000){
			scoreTablePosition=2;
		} else if (score > 100 && score < 500){
			scoreTablePosition=3;
		} else {
			scoreTablePosition=4;
		}
	}
	
	public static int calculateScore(boolean gameOver, int score, int levelCompleted, int bonus) {
//		boolean gameOver = true;
//		int score = 800;
//		int levelCompleted = 5;
//		int bonus = 100;            
/* 
 * When params are passed to method, we need not define vars explicitly
 */
		
		if(gameOver){
			int finalScore = score + (levelCompleted * bonus);
			finalScore += 100;
		
		}
		
		return -1;
	}

	public static void main(String[] args) {
		boolean gameOver = true;
		int score = 800;
		int levelCompleted = 5;
		int bonus = 100;
		
		int highScore = calculateScore(gameOver, score, levelCompleted, bonus);
		System.out.println(" Your final score was "+ highScore);
/*
 * These vars are created when we add params to method with datatypes, java creates them 
 * for us automatically
 */
		
		 score = 10000;
		 levelCompleted = 8;
		 bonus = 200;
		

		highScore = calculateScore(gameOver, score, levelCompleted, bonus);
		System.out.println(" Your final score was "+ highScore);
		
		/*
		 * Here we can replicate the vars and method calls, with out reinitializing
		 * the vars, one time call and multiple uses
		 */
		
		
		/*
		 * Here both cases of calculateScore method use same method and logic defined in 
		 * calculateScore method
		 */
		
		
		

}


}
